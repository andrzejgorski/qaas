# Generated by Django 3.2 on 2022-01-23 18:19

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveSmallIntegerField(default=0)),
                ('text', models.CharField(max_length=200)),
                ('correct', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveSmallIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('text', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='QuestionScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('score', models.FloatField(default=0)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiz_creator.question')),
            ],
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveSmallIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=50)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SingleAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('correct', models.BooleanField(default=False)),
                ('choice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiz_creator.choice')),
                ('question_score', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiz_creator.questionscore')),
            ],
        ),
        migrations.CreateModel(
            name='QuizParticipation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveSmallIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(default=None, null=True)),
                ('ended_at', models.DateTimeField(default=None, null=True)),
                ('started', models.BooleanField(default=False)),
                ('ended', models.BooleanField(default=False)),
                ('progress', models.FloatField(default=0)),
                ('score', models.FloatField(default=0)),
                ('notified', models.BooleanField(default=False)),
                ('url_id', models.CharField(max_length=255)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiz_creator.quiz')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='QuizInvitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=255)),
                ('accepted', models.BooleanField(default=False)),
                ('url_id', models.CharField(max_length=255)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiz_creator.quiz')),
            ],
        ),
        migrations.AddField(
            model_name='questionscore',
            name='quiz_participation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiz_creator.quizparticipation'),
        ),
        migrations.AddField(
            model_name='question',
            name='quiz',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiz_creator.quiz'),
        ),
        migrations.AddField(
            model_name='choice',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quiz_creator.question'),
        ),
        migrations.AddIndex(
            model_name='quizparticipation',
            index=models.Index(fields=['url_id'], name='quiz_creato_url_id_4bdf79_idx'),
        ),
        migrations.AddIndex(
            model_name='quizparticipation',
            index=models.Index(fields=['user', 'number'], name='quiz_creato_user_id_a4c3b3_idx'),
        ),
        migrations.AddIndex(
            model_name='quizinvitation',
            index=models.Index(fields=['url_id'], name='quiz_creato_url_id_1e0520_idx'),
        ),
        migrations.AddIndex(
            model_name='quizinvitation',
            index=models.Index(fields=['email'], name='quiz_creato_email_a08182_idx'),
        ),
        migrations.AddIndex(
            model_name='quiz',
            index=models.Index(fields=['user', 'number'], name='quiz_creato_user_id_65d1a3_idx'),
        ),
        migrations.AddIndex(
            model_name='question',
            index=models.Index(fields=['quiz', 'number'], name='quiz_creato_quiz_id_ede7d7_idx'),
        ),
    ]
